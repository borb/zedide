<!doctype html>
<html lang="en">
	<head>
		<title>ZedIDE: Z80 in a browser</title>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
	</head>
	<body ng-controller="ideController">
		<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
			<a class="navbar-brand" href="#">ZedIDE</a>

			<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#menu" aria-controls="menu" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>

			<div class="collapse navbar-collapse" id="menu">
				<ul class="navbar-nav">
					<li class="nav-item">
						<a class="nav-link" href="#">Load</a>
					</li>
					<li class="nav-item dropdown">
						<a class="nav-link dropdown-toggle" href="#" id="exampleMenu" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
							Examples
						</a>
						<div class="dropdown-menu" aria-labelledby="exampleMenu">
							<a class="dropdown-item" href="#">Hello world</a>
							<a class="dropdown-item" href="#">Registers and loops</a>
						</div>
					</li>
				</ul>
			</div>

			<form class="form-inline">
				<button class="form-control btn btn-outline-primary mr-sm-2" id="assemble" ng-click="assemble()">Assemble</button>
				<button class="form-control btn btn-outline-info my-2 my-sm-0" id="save" ng-click="save()" disabled>Save</button>
			</form>
		</nav>

		<div class="container-fluid editor-ctrl relative-top">
			<!-- editor and toolbox -->
			<div class="row">
				<div class="col-9">
					<textarea id="code-editor">
; sample program which writes "Hello, world!" to tty attached to io port $0a

	; at address $0, blank a & flags, jump to main program
	.org $0000
	ld bc, $0000
	push bc
	pop af
	jp main

	; main program at $100, load message pointer into hl
	.org $0100
main:
	ld hl, msg

	; loop - load a byte from (hl); if zero, we're finished, otherwise write to port $0a
loop:
	ld a, (hl)
	and a       ; ld a doesn't affect flags, but and does; use to set z if a=0
	jp z, fin
	out $0a, a
	inc hl
	jp loop

	; halt the cpu
fin:
	halt

	; our message: .cstr is "c-style null-terminated string"
msg:
	.cstr "Hello, world!"
</textarea>
				</div>
				<div class="col-3">
					<h5>Program control</h5>
					<div class="container-fluid">
						<div class="form-row">
							<div class="col"><button class="form-control btn btn-primary" id="run" ng-click="run()">Run</button></div>
							<div class="col"><button class="form-control btn btn-warning" id="step" ng-click="step()">Step</button></div>
							<div class="col"><button class="form-control btn btn-danger" id="stop" ng-click="stop()">Stop</button></div>
						</div>
					</div>

					<hr/>

					<!-- register table -->
					<h5>Registers</h5>
					<div class="container-fluid">
						<div class="row register-row-label">
							<div class="col-3">PC</div>
							<div class="col-3">SP</div>
							<div class="col-3">IM</div>
							<div class="col-3">Interrupts?</div>
						</div>
						<div class="row">
							<div class="col-3"><tt>{{ regs.pc | hexify:4 }}</tt></div>
							<div class="col-3"><tt>{{ regs.sp | hexify:4 }}</tt></div>
							<div class="col-3"><tt>{{ regs.im | hexify:1 }}</tt></div>
							<div class="col-3"><tt>{{ interrupts ? 'Yes' : 'No' }}</tt></div>
						</div>
						<div class="row register-row-label">
							<div class="col-3">A</div>
							<div class="col-3">BC</div>
							<div class="col-3">DE</div>
							<div class="col-3">HL</div>
						</div>
						<div class="row">
							<div class="col-3"><tt>{{ regs.a | hexify:2 }}</tt></div>
							<div class="col-3"><tt>{{ regs.bc | hexify:4 }}</tt></div>
							<div class="col-3"><tt>{{ regs.de | hexify:4 }}</tt></div>
							<div class="col-3"><tt>{{ regs.hl | hexify:4 }}</tt></div>
						</div>
						<div class="row register-row-label">
							<div class="col-3">A'</div>
							<div class="col-3">BC'</div>
							<div class="col-3">DE'</div>
							<div class="col-3">HL'</div>
						</div>
						<div class="row">
							<div class="col-3"><tt>{{ regs.a2 | hexify:2 }}</tt></div>
							<div class="col-3"><tt>{{ regs.bc2 | hexify:4 }}</tt></div>
							<div class="col-3"><tt>{{ regs.de2 | hexify:4 }}</tt></div>
							<div class="col-3"><tt>{{ regs.hl2 | hexify:4 }}</tt></div>
						</div>
						<div class="row register-row-label">
							<div class="col-3">IX</div>
							<div class="col-3">IY</div>
							<div class="col-3">I</div>
							<div class="col-3">R</div>
						</div>
						<div class="row">
							<div class="col-3"><tt>{{ regs.ix | hexify:4 }}</tt></div>
							<div class="col-3"><tt>{{ regs.iy | hexify:4 }}</tt></div>
							<div class="col-3"><tt>{{ regs.i | hexify:2 }}</tt></div>
							<div class="col-3"><tt>{{ regs.r | hexify:2 }}</tt></div>
						</div>
					</div>

					<hr/>

					<!-- cpu flags -->
					<h5>CPU flags</h5>
					<div class="container-fluid">
						<div class="row">
							<div class="col-1 mx-auto text-right register-label">Sign</div>
							<div class="col-1 mx-auto text-right register-label">Zero</div>
							<div class="col-1 mx-auto text-right register-label">Bit 5</div>
							<div class="col-1 mx-auto text-right register-label">Half</div>
							<div class="col-1 mx-auto text-right register-label">Bit 3</div>
							<div class="col-1 mx-auto text-right register-label">Parity</div>
							<div class="col-1 mx-auto text-right register-label">Subtraction</div>
							<div class="col-1 mx-auto text-right register-label">Carry</div>
						</div>
						<div class="row">
							<div class="col-1 mx-auto text-left">{{ regs.flags[0] }}</div>
							<div class="col-1 mx-auto text-left">{{ regs.flags[1] }}</div>
							<div class="col-1 mx-auto text-left">{{ regs.flags[2] }}</div>
							<div class="col-1 mx-auto text-left">{{ regs.flags[3] }}</div>
							<div class="col-1 mx-auto text-left">{{ regs.flags[4] }}</div>
							<div class="col-1 mx-auto text-left">{{ regs.flags[5] }}</div>
							<div class="col-1 mx-auto text-left">{{ regs.flags[6] }}</div>
							<div class="col-1 mx-auto text-left">{{ regs.flags[7] }}</div>
						</div>
					</div>

					<hr/>

					<!-- memory display -->
					<h5>Memory</h5>
					<div class="container-fluid">
						<div class="row">
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="container-fluid output-ctrl fixed-bottom">
			<!-- cpu output -->
			<div class="row">
				<div class="col-12">
					<div class="form-group">
						<label for="cpuOutput">CPU output port (port $0a)</label>
						<textarea disabled id="cpuOutput" class="form-control" ng-bind="cpuOutput"></textarea>
					</div>
				</div>
			</div>

			<!-- assembler/control messages (and errors) -->
			<div class="row">
				<div class="col-12">
					<div class="form-group">
						<label for="controlMessages">Control messages</label>
						<textarea disabled id="outputMessages" class="form-control" ng-bind="outputMessages"></textarea>
					</div>
				</div>
			</div>
		</div>

		<!-- load javascript after the page has finished loading -->
		<script src="/js/frontend.bundle.js"></script>
	</body>
</html>
